name: Revitalize Test Matrix

on:
  push:
    branches: [ main, develop, 'feature/Sprint*' ]
    paths: 
      - 'Revitalize/**'
      - 'Tests/Revitalize/**'
      - 'Tests/Mocks/**'
      - 'Tests/TestSeeds/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Revitalize/**'
      - 'Tests/Revitalize/**'
      - 'Tests/Mocks/**'
      - 'Tests/TestSeeds/**'

jobs:
  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [Revitalize, Empathy, FixItFred]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Unit Tests - ${{ matrix.category }}
      run: dotnet test --no-build --configuration Release --filter "Category=${{ matrix.category }} & TestType=Unit" --logger "trx;LogFileName=unit-tests-${{ matrix.category }}.trx"
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results-${{ matrix.category }}
        path: "**/*.trx"

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        layer: [Service, Diagnostic, CLI]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Integration Tests - ${{ matrix.layer }}
      run: dotnet test --no-build --configuration Release --filter "Layer=${{ matrix.layer }} & TestType=Integration" --logger "trx;LogFileName=integration-tests-${{ matrix.layer }}.trx"
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results-${{ matrix.layer }}
        path: "**/*.trx"

  test-empathy:
    name: Empathy Persona Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        persona: [AnxiousCustomer, FrustratedCustomer, TechnicallySavvy]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Empathy Tests - ${{ matrix.persona }}
      run: dotnet test --no-build --configuration Release --filter "Persona=${{ matrix.persona }}" --logger "trx;LogFileName=empathy-tests-${{ matrix.persona }}.trx"
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: empathy-test-results-${{ matrix.persona }}
        path: "**/*.trx"

  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-empathy]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run All Revitalize Tests with Coverage
      run: |
        dotnet test --no-build --configuration Release \
          --filter "Category=Revitalize | Category=Empathy | Category=FixItFred" \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger "trx;LogFileName=all-revitalize-tests.trx"
    
    - name: Generate Coverage Report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator \
          -reports:"coverage/**/coverage.cobertura.xml" \
          -targetdir:"coverage/report" \
          -reporttypes:"Html;JsonSummary"
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/report/
    
    - name: Upload All Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: all-test-results
        path: "**/*.trx"

  diagnostic-summary:
    name: Generate Diagnostic Summary
    runs-on: ubuntu-latest
    needs: [test-coverage]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Test Results
      uses: actions/download-artifact@v4
      with:
        pattern: "*test-results*"
        merge-multiple: true
    
    - name: Generate Test Summary
      run: |
        echo "# Revitalize Test Matrix Summary" > test-summary.md
        echo "Generated on: $(date)" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Test Categories" >> test-summary.md
        echo "- ✅ Revitalize Core Tests" >> test-summary.md
        echo "- ✅ Empathy Integration Tests" >> test-summary.md
        echo "- ✅ FixItFred Diagnostic Tests" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Persona Coverage" >> test-summary.md
        echo "- ✅ AnxiousCustomer" >> test-summary.md
        echo "- ✅ FrustratedCustomer" >> test-summary.md
        echo "- ✅ TechnicallySavvy" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Test Layers" >> test-summary.md
        echo "- ✅ Service Layer" >> test-summary.md
        echo "- ✅ Diagnostic Layer" >> test-summary.md
        echo "- ✅ CLI Layer" >> test-summary.md
    
    - name: Upload Test Summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md