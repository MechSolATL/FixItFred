@page
@model MVP_Core.Pages.Customer.ServiceHistoryModel
@inject MVP_Core.Services.CustomerPortalService PortalService
@inject MVP_Core.Services.ReceiptArchiveService ArchiveService
@{
    Layout = "/Pages/Shared/_Layout.cshtml";
    if (!(User.Identity?.IsAuthenticated ?? false) || !(User.HasClaim("IsCustomer", "true") ?? false)) // Sprint 82: RazorViewFortification
    {
        <div class="alert alert-danger">Access denied. Please log in as a customer.</div>
        return;
    }
    var email = User.Identity?.Name ?? string.Empty; // Sprint 82: RazorViewFortification
    var requests = Model.Requests ?? new List<MVP_Core.Data.Models.ServiceRequest>(); // Sprint 82: RazorViewFortification
    var technicians = Model.Technicians ?? new List<MVP_Core.Data.Models.Technician>(); // Sprint 82: RazorViewFortification
    var filterDate = Request.Query["date"].ToString();
    var filterType = Request.Query["type"].ToString();
    var filterTech = Request.Query["tech"].ToString();
    var filtered = (requests ?? new List<MVP_Core.Data.Models.ServiceRequest>()).Where(r => (string.IsNullOrEmpty(filterDate) || r.RequestedAt.ToShortDateString() == filterDate) && (string.IsNullOrEmpty(filterType) || r.ServiceType == filterType) && (string.IsNullOrEmpty(filterTech) || r.AssignedTo == filterTech)).ToList(); // Sprint 82: RazorViewFortification
    var grouped = filtered.GroupBy(r => r.RequestedAt.Year).OrderByDescending(g => g.Key); // Sprint 82: RazorViewFortification
}
<h2>Service History Timeline</h2>
<form method="get" class="row mb-3">
    <div class="col"><input type="date" name="date" class="form-control" value="@filterDate" /></div>
    <div class="col"><input type="text" name="type" class="form-control" placeholder="Service Type" value="@filterType" /></div>
    <div class="col"><input type="text" name="tech" class="form-control" placeholder="Technician" value="@filterTech" /></div>
    <div class="col"><button type="submit" class="btn btn-primary">Filter</button></div>
</form>
<div class="accordion" id="historyAccordion">
@foreach (var yearGroup in grouped ?? new List<IGrouping<int, MVP_Core.Data.Models.ServiceRequest>>()) // Sprint 82: RazorViewFortification
{
    <div class="accordion-item">
        <h2 class="accordion-header" id="heading-year-@yearGroup.Key">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-year-@yearGroup.Key" aria-expanded="false" aria-controls="collapse-year-@yearGroup.Key">
                @yearGroup.Key
            </button>
        </h2>
        <div id="collapse-year-@yearGroup.Key" class="accordion-collapse collapse" aria-labelledby="heading-year-@yearGroup.Key" data-bs-parent="#historyAccordion">
            <div class="accordion-body">
                @foreach (var req in yearGroup.OrderByDescending(r => r.RequestedAt.Month) ?? new List<MVP_Core.Data.Models.ServiceRequest>()) // Sprint 82: RazorViewFortification
                {
                    var tech = Model.GetTechnicianById(req?.AssignedTechnicianId ?? 0); // Sprint 82: RazorViewFortification
                    <div class="card mb-2">
                        <div class="card-header">
                            <strong>@(req?.RequestedAt.ToString("MMM dd") ?? "-") // Sprint 82: RazorViewFortification</strong> - @(req?.ServiceType ?? "-") // Sprint 82: RazorViewFortification
                            <span class="badge bg-secondary ms-2">@(req?.Status ?? "-") // Sprint 82: RazorViewFortification</span>
                            @if (req?.NeedsFollowUp ?? false) { <span class="badge bg-warning text-dark ms-1">Follow-Up Needed</span> }
                            @if (string.IsNullOrEmpty(req?.CustomerFeedback ?? "")) { <span class="badge bg-info text-dark ms-1">No Review</span> }
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2">
                                    @if (tech != null && !string.IsNullOrEmpty(tech.PhotoUrl)) {
                                        <img src="@tech.PhotoUrl" alt="Tech Avatar" class="rounded-circle" style="width:48px;height:48px;" />
                                    }
                                    <div>@tech?.FullName ?? "-" // Sprint 82: RazorViewFortification</div>
                                </div>
                                <div class="col-md-10">
                                    <strong>Details:</strong> @(req?.Details ?? "-") // Sprint 82: RazorViewFortification<br />
                                    <strong>Notes:</strong> @(req?.Notes ?? "-") // Sprint 82: RazorViewFortification<br />
                                    <strong>Outcome:</strong> @((req?.Status == "Completed" ? "Completed" : req?.Status) ?? "-") // Sprint 82: RazorViewFortification
                                    <br />
                                    @if (!string.IsNullOrEmpty(req?.FinalizedPDFPath ?? "")) {
                                        <a href="@(req.FinalizedPDFPath.Replace("wwwroot", ""))" class="btn btn-sm btn-outline-primary" target="_blank">Download Receipt PDF</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
</div>
<style>
.accordion-button { font-size: 1rem; }
.accordion-body { font-size: 0.95rem; }
.card-header { background: #f8f9fa; }
</style>
