@page
@using Models.Admin
@inject Services.Admin.DispatcherService DispatcherService
@{
    // FixItFred — Sprint 44 Razor Async Patch
    int requestId = 0;
    int.TryParse(Request.Query["requestId"], out requestId);
    var threadTask = DispatcherService.GetMessageThreadForRequest(requestId);
    var thread = threadTask.GetAwaiter().GetResult();
    ViewData["Title"] = "Request Messages";
}
<h2 class="mb-4">Request Messages</h2>
@if (thread == null || !thread.Any())
{
    <div class="alert alert-info">No messages yet.</div>
}
else
{
    <ul class="list-group mb-4">
    @foreach (var msg in thread)
    {
        <li class="list-group-item">
            <span class="fw-bold">@msg.Type:</span> @msg.Message
            <span class="float-end small text-muted">@msg.Timestamp.ToLocalTime().ToString("g")</span>
        </li>
    }
    </ul>
}
<form method="post">
    <input type="hidden" name="requestId" value="@requestId" />
    <div class="input-group mb-3">
        <textarea name="messageBody" class="form-control" placeholder="Type a message..." required></textarea>
        <button type="submit" class="btn btn-success">Send</button>
    </div>
</form>
@if (TempData["MessageStatus"] != null)
{
    <div class="alert alert-success">@TempData["MessageStatus"]</div>
}
