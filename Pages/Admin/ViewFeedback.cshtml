@page
@using MVP_Core.Data.Models
@inject MVP_Core.Services.TechnicianFeedbackService FeedbackService
@inject MVP_Core.Services.Admin.DispatcherService DispatcherService
@{
    // Sprint 22: Admin feedback viewing page
    ViewData["Title"] = "Technician Feedback";
    int techId = 0;
    int.TryParse(Request.Query["techId"], out techId);
    var feedbacks = FeedbackService.GetFeedbackForTechnician(techId);
    double avg = FeedbackService.CalculateAverageRating(techId);
}
<h2 class="mb-4">Technician Feedback</h2>
@if (techId == 0)
{
    <div class="alert alert-warning">Select a technician to view feedback.</div>
}
else if (feedbacks == null || !feedbacks.Any())
{
    <div class="alert alert-info">No feedback yet.</div>
}
else
{
    <div class="mb-3">
        <span class="fw-bold">Average Rating:</span>
        <span class="badge bg-success">@avg</span>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Date</th>
                <th>Rating</th>
                <th>Notes</th>
                <th>Submitted By</th>
                <th>Flag</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var fb in feedbacks)
        {
            var flag = (fb.Rating <= 2 || (!string.IsNullOrEmpty(fb.Notes) && fb.Notes.ToLower().Contains("issue"))) ? "??" : "";
            <tr>
                <td>@fb.SubmittedAt.ToLocalTime().ToString("g")</td>
                <td>@fb.Rating</td>
                <td>@fb.Notes</td>
                <td>@fb.SubmittedBy</td>
                <td>@flag</td>
            </tr>
        }
        </tbody>
    </table>
}
<!-- Co-Pilot: This page is for admin/dispatcher to view all feedback for a technician. Shows average, flags, and comments. -->
